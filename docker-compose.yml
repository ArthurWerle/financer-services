services:
  postgres:
    networks:
      - database
      - back-end
    image: postgres:15
    env_file:
      - stack.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d mordor"]
      interval: 10s 
      timeout: 5s
      retries: 5
      start_period: 30s 
    
  backup:
    build:
      context: .
      dockerfile: Dockerfile.backup
    restart: unless-stopped
    volumes:
      - ./stack.env:/stack.env:ro
      - /mnt/sda/backups/financer:/backups
      - /etc/localtime:/etc/localtime:ro
      - /home/arthur/.muttrc:/root/.muttrc:ro
    environment:
      TZ: "America/Sao_Paulo"
      BACKUP_INTERVAL: ${BACKUP_INTERVAL:-604800}  # Default to weekly (in seconds)
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - database

  category-service:
    networks:
      - database
      - back-end
    depends_on:
      postgres:
        condition: service_healthy
    pull_policy: build
    restart: unless-stopped
    build:
      context: ./category-service/
      dockerfile: ./${DOCKERFILE:-Dockerfile}
    ports:
      - "8080:8080"
    env_file:
      - stack.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/healthcheck"]
      interval: 5s
      timeout: 5s
      retries: 3

  redis: 
    image: "redis:latest" 
    restart: unless-stopped
    networks:
      - database
      - back-end 
    ports:
      - "6379:6379" 
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  transaction-service:
    networks:
      - database
      - back-end
    depends_on:
      postgres:
        condition: service_healthy
      category-service:
        condition: service_healthy
      redis:
        condition: service_healthy
    pull_policy: build
    restart: unless-stopped
    build:
      context: ./transaction-service/
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    env_file:
      - stack.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  bff-service:
    networks:
      - back-end
    depends_on:
      postgres:
        condition: service_healthy
      category-service:
        condition: service_healthy
      transaction-service:
        condition: service_healthy
    pull_policy: build
    restart: unless-stopped
    build:
      context: ./bff-service/
      dockerfile: Dockerfile
    ports:
      - "8082:3000"
    env_file:
      - stack.env

volumes:
  postgres_data:
  redis_data:

networks:
  database:
    driver: bridge
  back-end:
    driver: bridge
